{"version":3,"sources":["components/Header/Header.js","components/Form/Form.js","components/UI/Spinner/Spinner.js","utils/pushComment.js","components/UI/Modal/Modal.js","utils/fetchData.js","components/IssuesCard/IssuesCard.js","components/IssuesList/IssuesList.js","App.js","index.js"],"names":["Header","className","Form","props","errorMessageClasses","error","push","join","onSubmit","e","preventDefault","fetchRepositoryInfo","htmlFor","id","type","placeholder","onChange","event","onChangeStepOneInfo","target","value","onFocus","setError","Spinner","wrapperClass","classes","pushComment","comment","token","a","query","JSON","stringify","fetch","method","headers","Authorization","Accept","body","response","json","responseJson","Modal","active","setModalActive","choosenIssue","useState","commentText","setCommentText","isLoading","setIsLoading","pushedComment","setPushedComment","errorMessage","setErrorMessage","classesModal","classesModalContent","handleCommentTextChange","leaveComment","then","res","data","Error","addComment","commentEdge","node","setTimeout","catch","onClick","stopPropagation","title","style","textAlign","cols","rows","renderForm","fetchData","owner","repository","IssuesCard","text","comments","url","setChoosenIssue","href","IssuesList","issues","startNewSearch","modalActive","repositoryInfo","map","item","issue","bodyText","edges","length","App","setRepositoryInfo","setIssues","key","prev","ok","status","errors","message","console","log","useEffect","document","overflowY","renderIssuesList","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5f5d7141.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.scss';\n\nconst Header = () => {\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\">Github issues manager</h1>\n    </header>\n  )\n}\n\nexport default Header;","import React from 'react';\nimport './Form.scss';\n\nconst Form = props => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.fetchRepositoryInfo();\n  }\n\n  const errorMessageClasses = ['error-message'];\n  if (props.error) {\n    errorMessageClasses.push('error-message--active');\n  }\n  return (\n    <>\n      <div className={errorMessageClasses.join(' ')}>{props.error}</div>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"form__wrapper\">\n          <label htmlFor=\"token\">Enter Github token</label>\n          <input \n          id=\"token\" type=\"password\" placeholder=\"Token...\" \n          onChange={(event) => props.onChangeStepOneInfo(event.target.id, event.target.value)}\n          onFocus={() => props.setError('')}\n          />\n        </div>\n        <div className=\"form__wrapper\">\n          <label htmlFor=\"owner\">Enter repository owner</label>\n          <input id=\"owner\" type=\"text\" placeholder=\"Owner...\" \n            onChange={(event) => props.onChangeStepOneInfo(event.target.id, event.target.value)} \n            onFocus={() => props.setError('')}  \n          />\n        </div>\n        <div className=\"form__wrapper\">\n          <label htmlFor=\"repo-name\">Enter repository name</label>\n          <input id=\"repository\" type=\"text\" placeholder=\"Name...\" \n            onChange={(event) => props.onChangeStepOneInfo(event.target.id, event.target.value)}\n            onFocus={() => props.setError('')}  \n          />\n        </div>\n        <button type=\"submit\">Find</button>\n      </form>\n    </>\n  )\n}\n\nexport default Form;","import React from 'react';\nimport './Spinner.scss';\n\nconst Spinner = props => {\n  return (\n      <div className={props.wrapperClass}>\n        <div className={props.classes}><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n      </div>\n\n  )\n}\n\nexport default Spinner;","const pushComment = async (id, comment, token) => {\n  const query = JSON.stringify({\n    query: `mutation {\n      addComment(input: {\n        subjectId: \"${id}\",\n        body: \"${comment}\",\n        clientMutationId: \"${comment}\"\n      }) {\n        clientMutationId,\n        commentEdge {\n          node {\n            body\n          }\n        }\n      }\n    }`\n  });\n\n  const response = await fetch('https://api.github.com/graphql', {\n    method: 'POST',  \n    headers: {\n      Authorization: `token ${token}`,\n      Accept: 'application/json',\n      'User-Agent': 'request',\n      'Content-type': 'application/json'\n    },\n    body: query\n  });\n  \n  const responseJson = await response.json();\n  return  responseJson;\n}\n\nexport default pushComment;","import React, {useState} from 'react';\nimport pushComment from '../../../utils/pushComment';\nimport Spinner from '../Spinner/Spinner';\nimport './Modal.scss';\n\nconst Modal = ({active, setModalActive, choosenIssue, token}) => {\n  const [commentText, setCommentText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [pushedComment, setPushedComment] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const classesModal = ['modal'];\n  const classesModalContent = ['modal-content']\n  if (active) {\n    classesModal.push('modal--active');\n    classesModalContent.push('modal-content--active');\n  }\n\n  const handleCommentTextChange = e => {\n    setCommentText(e.target.value);\n  }\n\n  const leaveComment = (e) => {\n    e.preventDefault();\n    setIsLoading(true)\n    pushComment(choosenIssue.id, commentText, token)\n      .then(res => {\n        if (!res.data) {\n          throw new Error('Error! Check entering data and try again.')\n        }\n        setCommentText('');\n        setIsLoading(false);\n        setPushedComment(res.data.addComment.commentEdge.node.body);\n        setTimeout(() => {\n          setPushedComment('');\n          setModalActive(false);\n        }, 3000);\n      })\n      .catch(e => {\n        setCommentText('');\n        setErrorMessage('Error! Check entering data and try again.');\n        setIsLoading(false);\n        setTimeout(() => {\n          setErrorMessage('');\n        }, 3000);\n      }); \n  }\n\n  const renderPushCommentMessage = () => {\n    if (pushedComment) {\n      return (\n        <h3 style={{textAlign: \"center\"}}>\n          Your commentary \"{pushedComment}\" was successfully pushed!\n        </h3>\n      )\n    } else if (errorMessage) {\n      return (\n        <h3 style={{textAlign: \"center\"}}>\n          {errorMessage}\n        </h3>\n      )\n    }\n  }\n\n  const renderForm = () => {\n    if (!pushedComment && !errorMessage) {\n      return (\n        isLoading ? \n        <Spinner \n          classes=\"lds-spinner lds-spinner--active\"\n          wrapperClass=\"spinner-modal\"  \n          /> :\n        <form className=\"modal-content__form\" onSubmit={leaveComment}>\n        <textarea \n          className=\"modal-content__textarea\" \n          cols=\"30\" \n          rows=\"10\"\n          onChange={handleCommentTextChange}\n          value={commentText}\n        />\n        <button \n          className=\"modal-content__btn\">Comment</button>\n      </form>\n      )\n    }\n  }\n\n  return (\n    <div \n      className={classesModal.join(' ')}\n      onClick={() => setModalActive(false)}\n    >\n      <div \n      className={classesModalContent.join(' ')}\n      onClick={e => e.stopPropagation()}\n      >\n        <div className=\"modal-content__title\">Issue: {choosenIssue.title}</div>\n        {renderPushCommentMessage()}\n        {renderForm()}\n      </div>\n    </div>\n  )\n}\n\n\nexport default Modal;","const fetchData = async (token, owner, repository) => {\n  const body = JSON.stringify(\n    {\n      query: `{\n        repository(owner: \"${owner}\", name: \"${repository}\") {\n          issues(last: 100, states: OPEN) {\n            edges {\n              node {\n                title\n                bodyText\n                url\n                id \n                comments(last: 100) {\n                  edges {\n                    node {\n                      bodyText\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }`\n    }\n  )\n    \n  const response = await fetch('https://api.github.com/graphql', {\n    method: 'POST',\n    headers: {\n      Authorization: `token ${token}`,\n      Accept: 'application/json',\n      'User-Agent': 'request',\n      'Content-type': 'application/json'\n    },\n    body: body,\n  });\n\n  return response;\n    \n}\n\nexport default fetchData;\n","import React from 'react';\nimport './IssuesCard.scss';\n\nconst IssuesCard = ({title, text, comments, url, id, setModalActive, setChoosenIssue}) => {\n  \n  return (\n    <div className=\"issue-card\" id={id}>\n      <div className=\"issue-card__title\"><h3>Title:</h3> {title}</div>\n      <div className=\"issue-card__text\"><h3>Text</h3>: {text}</div>\n      <div className=\"issue-card__comments\"><h3>Comments number</h3>: {comments}</div>\n      <div className=\"issue-card__url\"><h3>Issue URL:</h3> <a href={url}>{url}</a></div>\n      <div className=\"issue-card__button-container\">\n      <button \n        className=\"issue-card__btn\"\n        onClick={() => {\n          setModalActive(true);\n          setChoosenIssue({\n            title,\n            id\n          })\n        }}\n      >\n      Leave comment</button>\n      </div>\n    </div>\n  )\n}\n\nexport default IssuesCard;\n\n","import React from 'react';\nimport IssuesCard from '../IssuesCard/IssuesCard';\nimport './IssuesList.scss';\n\nconst IssuesList = ({issues, startNewSearch, modalActive, setModalActive, setChoosenIssue, fetchRepositoryInfo, repositoryInfo}) => {\n\n  const refreshRepositoryData = () => {\n    const {token, owner, repository} = repositoryInfo;\n    fetchRepositoryInfo(token, owner, repository);\n  }\n\n  return (\n    <div className=\"issues-wrapper\">\n      <div className=\"issues-wrapper__button-container\">\n        <button \n          className=\"issues-wrapper__btn\"\n          onClick={startNewSearch}\n        >New search</button>\n        <button \n          className=\"issues-wrapper__btn\"\n          onClick={refreshRepositoryData}\n        >Refresh</button>\n      </div>\n      {issues.map((item) => {\n        const issue = item.node;\n        return <IssuesCard \n                key={issue.id}\n                id={issue.id}\n                title={issue.title} \n                text={issue.bodyText}\n                comments={issue.comments.edges.length}\n                url={issue.url}  \n                setModalActive={setModalActive}\n                modalActive={modalActive}\n                setChoosenIssue={setChoosenIssue}\n                />\n      })}\n    </div>\n  )\n}\n\nexport default IssuesList;","import React, { useEffect, useState } from 'react';\nimport Header from './components/Header/Header';\nimport Form from './components/Form/Form';\nimport Spinner from './components/UI/Spinner/Spinner';\nimport Modal from './components/UI/Modal/Modal';\nimport './App.scss';\nimport fetchData from './utils/fetchData';\nimport IssuesList from './components/IssuesList/IssuesList';\n\nconst App = () => {\n  const [repositoryInfo, setRepositoryInfo] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [issues, setIssues] = useState('');\n  const [modalActive, setModalActive] = useState(false);\n  const [choosenIssue, setChoosenIssue] = useState({});\n\n  const onChangeStepOneInfo = (key, value) => {\n    setRepositoryInfo((prev) => {\n      return {...prev, [key]: value}\n    })\n  }\n\n  const fetchRepositoryInfo = async () => {\n    const {token, owner, repository} = repositoryInfo;\n    setError('');\n    setIsLoading(true);\n\n    fetchData(token, owner, repository)\n      .then(res => {\n        if (!res.ok) {\n          setIsLoading(false);\n          setError(`Error while loading from url: ${res.url}. Correct the entered data!`);\n          throw new Error(`Error! ${res.status}`);\n        }\n        return res.json();\n      })\n      .then(res => {\n        if (res.errors) {\n          setIsLoading(false);\n          setError(res.errors[0].message);\n        }\n        setIssues(res.data);\n        setIsLoading(false);\n      })\n      .catch(e => console.log(e));\n  }\n\n  const startNewSearch = () => {\n    setIssues('');\n  }\n\n  const renderForm = () => {\n    if (!issues.repository) {\n      return (\n        isLoading ? \n          <Spinner classes=\"lds-spinner\" wrapperClass=\"spinner\"/> :\n          <Form \n            setError={setError}\n            error={error}\n            fetchRepositoryInfo={fetchRepositoryInfo}\n            onChangeStepOneInfo={onChangeStepOneInfo} \n        /> \n      )\n    }\n  }\n\n  const renderIssuesList = () => {\n    if (issues.repository) {\n      return (\n        <IssuesList \n          fetchRepositoryInfo={fetchRepositoryInfo}\n          repositoryInfo={repositoryInfo}\n          issues={issues.repository.issues.edges}\n          startNewSearch={startNewSearch}\n          setModalActive={setModalActive}\n          modalActive={modalActive}\n          setChoosenIssue={setChoosenIssue}\n        />\n      )\n    }\n  }\n\n  useEffect(() => {\n    document.body.style.overflowY = modalActive ? 'hidden' : '';\n  }, [modalActive])\n\n  return (\n      <div className=\"App\">\n        <Header/>\n        {renderForm()}\n        {renderIssuesList()}\n        <Modal \n          active={modalActive} \n          setModalActive={setModalActive} \n          choosenIssue={choosenIssue}\n          token={repositoryInfo.token}\n        />\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}